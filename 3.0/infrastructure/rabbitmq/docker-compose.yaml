version: '3.0'
services:
  service:
    image: "openiamdocker/rabbitmq:alpine-${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_LOG_LEVEL: trace
      RABBITMQ_ERLANG_COOKIE: "OpenIAMClusterCookie"
      ERL_CRASH_DUMP: /var/lib/rabbitmq/erl_crash.dump
    volumes:
    - rabbitmq:/var/lib/rabbitmq
    hostname: rabbitmq
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 1024M
      # when rabbitmq crashes, it exists with '0', which one could argue is a bug.
      # So - make the restart policy 'any', so that it is always restarted
      restart_policy:
        condition: any
      update_config:
        delay: 1s
        parallelism: 2
    networks:
      openiam_private:
        aliases:
          - rabbitmq
    ports:
      - 5672
    stop_grace_period: 30s
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 5

networks:
  openiam_private:
    external:
      name: openiam_private
volumes:
  rabbitmq:
    external:
      name: openiam-rabbitmq-storage_storage
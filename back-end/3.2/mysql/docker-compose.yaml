version: '3.2'
services:
  esb:
    image: "openiamdocker/esb:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 1024M
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      OPENIAM_LOG_LEVEL: trace
    ports:
    - "9080:9080"
    networks:
    - openiam
    volumes:
    - ./jks/:/data/openiam/conf/jks
    deploy:
      labels:
        - "traefik.port=9080"
        - "traefik.docker.network=openiam"
        - "traefik.backend=esb"
        - "traefik.frontend.rule=Host:esb.openiam.com"
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 8
  groovy_manager:
    image: "openiamdocker/groovy-manager:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    depends_on:
    - rabbitmq
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 512M
      OPENIAM_LOG_LEVEL: trace
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 8
  idm:
    image: "openiamdocker/idm:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 512M
      OPENIAM_LOG_LEVEL: trace
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 8
  workflow:
    image: "openiamdocker/workflow:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    networks:
    - openiam
    depends_on:
    - rabbitmq
    - mariadb
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 512M
      OPENIAM_LOG_LEVEL: trace
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 8
  redis:
    image: "openiamdocker/redis:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    volumes:
    - ./redis-data/:/data
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      OPENIAM_LOG_LEVEL: trace
    ports:
    - 6379
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 10s
      timeout: 120s
      retries: 2
  mariadb:
    image: "openiamdocker/mariadb:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      OPENIAM_LOG_LEVEL: trace
    volumes:
    - ./mysql/:/var/lib/mysql
    - ./db/:/opt/openiam/webapps/db
    ports:
    - 3306
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 10s
      timeout: 120s
      retries: 2
  elasticsearch:
    image: "openiamdocker/elasticsearch:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    volumes:
    - ./elasticsearch/data/:/usr/share/elasticsearch/data
    ports:
    - 9200
    networks:
    - openiam
    environment:
      OPENIAM_LOG_LEVEL: trace
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
    healthcheck:
      # test: "(healthcheck.sh 120 && exit 0) || exit 1"
      test: "exit 0"
      interval: 10s
      timeout: 120s
      retries: 2
  rabbitmq:
    image: "openiamdocker/rabbitmq:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    ports:
    - 5672
    networks:
    - openiam
    environment:
      OPENIAM_LOG_LEVEL: trace
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 30s
      timeout: 120s
      retries: 5

networks:
  openiam:
    external:
      name: openiam
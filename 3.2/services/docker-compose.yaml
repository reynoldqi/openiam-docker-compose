version: '3.2'
services:
  ui:
    image: "openiamdocker/ui:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
    #- "8080:8080"
    - "8080"
    networks:
    - openiam
    deploy:
      labels:
      - "traefik.port=8080"
      - "traefik.docker.network=openiam"
      - "traefik.backend=ui"
      - "traefik.frontend.rule=PathPrefix:/webconsole, /selfservice, /selfservice-ext, /idp, /openiam-ui-static"
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 1s
        parallelism: 2
    stop_grace_period: 10s
    healthcheck:
      test: "(curl -s -f http://localhost:8080/openiam-ui-static/js/common/search/organization.search.js > /dev/null && exit 0) || exit 1"
      interval: 60s
      timeout: 120s
      retries: 6
  esb:
    image: "openiamdocker/esb:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      OPENIAM_JAVA_HEAP_SIZE: 1024M
      OPENIAM_LOG_LEVEL: trace
    volumes:
    - jks:/data/openiam/conf/jks
    ports:
    #- "9080:9080"
    - "9080"
    networks:
      openiam:
        aliases:
          - esb
    deploy:
      labels:
      - "traefik.port=9080"
      - "traefik.docker.network=openiam"
      - "traefik.backend=esb"
      #- "traefik.frontend.rule=Host:esb.openiam.com"
      #- "traefik.frontend.rule=Host:esb.openiam.com,Path:/openiam-esb"
      - "traefik.frontend.rule=PathPrefix:/openiam-esb"
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 1s
        parallelism: 2
    stop_grace_period: 10s
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 60s
      timeout: 120s
      retries: 6
  idm:
    image: "openiamdocker/idm:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 512M
      OPENIAM_LOG_LEVEL: trace
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 1s
        parallelism: 2
    stop_grace_period: 10s
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 60s
      timeout: 120s
      retries: 6
  groovy_manager:
    image: "openiamdocker/groovy-manager:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 256M
      OPENIAM_LOG_LEVEL: trace
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 1s
        parallelism: 2
    stop_grace_period: 10s
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 60s
      timeout: 120s
      retries: 6
  workflow:
    image: "openiamdocker/workflow:${OPENIAM_VERSION_NUMBER}-${BUILD_ENVIRONMENT}"
    environment:
      OPENIAM_JAVA_HEAP_SIZE: 1024M
      OPENIAM_LOG_LEVEL: trace
    volumes:
    - activiti:/data/openiam/conf/activiti
    networks:
    - openiam
    deploy:
      placement:
        constraints:
        - node.role == ${NODE_ROLE:-worker}
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 1s
        parallelism: 2
    stop_grace_period: 10s
    healthcheck:
      test: "(healthcheck.sh 120 && exit 0) || exit 1"
      interval: 60s
      timeout: 120s
      retries: 6

networks:
  openiam:
    external:
      name: openiam
volumes:
  activiti:
    external:
      name: openiam-activiti-storage
  jks:
    external:
      name: openiam-jks-storage
